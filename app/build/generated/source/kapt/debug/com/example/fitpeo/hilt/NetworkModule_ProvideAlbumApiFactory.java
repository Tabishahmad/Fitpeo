// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.hilt;

import com.example.fitpeo.data.repository.remote.AlbumDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideAlbumApiFactory implements Factory<AlbumDataSource> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideAlbumApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public AlbumDataSource get() {
    return provideAlbumApi(retrofitProvider.get());
  }

  public static NetworkModule_ProvideAlbumApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideAlbumApiFactory(retrofitProvider);
  }

  public static AlbumDataSource provideAlbumApi(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideAlbumApi(retrofit));
  }
}
