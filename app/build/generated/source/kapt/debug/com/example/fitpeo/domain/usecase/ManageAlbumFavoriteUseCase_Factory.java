// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.domain.usecase;

import com.example.fitpeo.domain.repository.AlbumDataBaseRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ManageAlbumFavoriteUseCase_Factory implements Factory<ManageAlbumFavoriteUseCase> {
  private final Provider<AlbumDataBaseRepository> dbRepositoryProvider;

  public ManageAlbumFavoriteUseCase_Factory(
      Provider<AlbumDataBaseRepository> dbRepositoryProvider) {
    this.dbRepositoryProvider = dbRepositoryProvider;
  }

  @Override
  public ManageAlbumFavoriteUseCase get() {
    return newInstance(dbRepositoryProvider.get());
  }

  public static ManageAlbumFavoriteUseCase_Factory create(
      Provider<AlbumDataBaseRepository> dbRepositoryProvider) {
    return new ManageAlbumFavoriteUseCase_Factory(dbRepositoryProvider);
  }

  public static ManageAlbumFavoriteUseCase newInstance(AlbumDataBaseRepository dbRepository) {
    return new ManageAlbumFavoriteUseCase(dbRepository);
  }
}
