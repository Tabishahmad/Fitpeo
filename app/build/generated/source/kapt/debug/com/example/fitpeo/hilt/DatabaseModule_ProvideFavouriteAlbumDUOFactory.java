// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.hilt;

import com.example.fitpeo.data.database.FavouriteAlbumDUO;
import com.example.fitpeo.data.database.FavouriteAlbumDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideFavouriteAlbumDUOFactory implements Factory<FavouriteAlbumDUO> {
  private final DatabaseModule module;

  private final Provider<FavouriteAlbumDatabase> favouriteAlbumDUOProvider;

  public DatabaseModule_ProvideFavouriteAlbumDUOFactory(DatabaseModule module,
      Provider<FavouriteAlbumDatabase> favouriteAlbumDUOProvider) {
    this.module = module;
    this.favouriteAlbumDUOProvider = favouriteAlbumDUOProvider;
  }

  @Override
  public FavouriteAlbumDUO get() {
    return provideFavouriteAlbumDUO(module, favouriteAlbumDUOProvider.get());
  }

  public static DatabaseModule_ProvideFavouriteAlbumDUOFactory create(DatabaseModule module,
      Provider<FavouriteAlbumDatabase> favouriteAlbumDUOProvider) {
    return new DatabaseModule_ProvideFavouriteAlbumDUOFactory(module, favouriteAlbumDUOProvider);
  }

  public static FavouriteAlbumDUO provideFavouriteAlbumDUO(DatabaseModule instance,
      FavouriteAlbumDatabase favouriteAlbumDUO) {
    return Preconditions.checkNotNullFromProvides(instance.provideFavouriteAlbumDUO(favouriteAlbumDUO));
  }
}
