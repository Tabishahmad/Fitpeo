// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.hilt;

import android.content.Context;
import com.example.fitpeo.data.database.FavouriteAlbumDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideAppDatabaseFactory implements Factory<FavouriteAlbumDatabase> {
  private final DatabaseModule module;

  private final Provider<Context> appContextProvider;

  public DatabaseModule_ProvideAppDatabaseFactory(DatabaseModule module,
      Provider<Context> appContextProvider) {
    this.module = module;
    this.appContextProvider = appContextProvider;
  }

  @Override
  public FavouriteAlbumDatabase get() {
    return provideAppDatabase(module, appContextProvider.get());
  }

  public static DatabaseModule_ProvideAppDatabaseFactory create(DatabaseModule module,
      Provider<Context> appContextProvider) {
    return new DatabaseModule_ProvideAppDatabaseFactory(module, appContextProvider);
  }

  public static FavouriteAlbumDatabase provideAppDatabase(DatabaseModule instance,
      Context appContext) {
    return Preconditions.checkNotNullFromProvides(instance.provideAppDatabase(appContext));
  }
}
