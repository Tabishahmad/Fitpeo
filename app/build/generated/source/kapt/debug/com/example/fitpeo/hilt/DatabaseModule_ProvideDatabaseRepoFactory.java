// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.hilt;

import com.example.fitpeo.data.database.FavouriteAlbumDUO;
import com.example.fitpeo.domain.repository.AlbumDataBaseRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideDatabaseRepoFactory implements Factory<AlbumDataBaseRepository> {
  private final DatabaseModule module;

  private final Provider<FavouriteAlbumDUO> favouriteAlbumDUOProvider;

  public DatabaseModule_ProvideDatabaseRepoFactory(DatabaseModule module,
      Provider<FavouriteAlbumDUO> favouriteAlbumDUOProvider) {
    this.module = module;
    this.favouriteAlbumDUOProvider = favouriteAlbumDUOProvider;
  }

  @Override
  public AlbumDataBaseRepository get() {
    return provideDatabaseRepo(module, favouriteAlbumDUOProvider.get());
  }

  public static DatabaseModule_ProvideDatabaseRepoFactory create(DatabaseModule module,
      Provider<FavouriteAlbumDUO> favouriteAlbumDUOProvider) {
    return new DatabaseModule_ProvideDatabaseRepoFactory(module, favouriteAlbumDUOProvider);
  }

  public static AlbumDataBaseRepository provideDatabaseRepo(DatabaseModule instance,
      FavouriteAlbumDUO favouriteAlbumDUO) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabaseRepo(favouriteAlbumDUO));
  }
}
