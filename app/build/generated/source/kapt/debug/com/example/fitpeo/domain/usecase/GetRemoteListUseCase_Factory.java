// Generated by Dagger (https://dagger.dev).
package com.example.fitpeo.domain.usecase;

import com.example.fitpeo.domain.repository.AlbumListRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRemoteListUseCase_Factory implements Factory<GetRemoteListUseCase> {
  private final Provider<AlbumListRepository> repositoryProvider;

  public GetRemoteListUseCase_Factory(Provider<AlbumListRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetRemoteListUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetRemoteListUseCase_Factory create(
      Provider<AlbumListRepository> repositoryProvider) {
    return new GetRemoteListUseCase_Factory(repositoryProvider);
  }

  public static GetRemoteListUseCase newInstance(AlbumListRepository repository) {
    return new GetRemoteListUseCase(repository);
  }
}
